name: CI/CD Symfony 6
on:
  push:
    branches:
      - master

jobs:
  symfony:
    name: Symfony 6.1 (PHP ${{ matrix.php-versions }})
    # https://hub.docker.com/_/ubuntu/
    runs-on: ubuntu-22.04
    services:
      # https://docs.docker.com/samples/library/mysql/
      mysql:
        image: mysql:latest
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_ROOT_PASSWORD: ''
          MYSQL_DATABASE: crm
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    strategy:
      fail-fast: true
      matrix:
        php-versions: [ '8.1' ]
    steps:
      # —— Setup GitHub actions 🐙 —————————————————————————————————————————————
      # https://github.com/actions/checkout (official)
      - name: Checkout
        uses: actions/checkout@v3

      # —— Yarn 🐱 ————————————————————————————————————————————————————————————
      - name: Nodejs install
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
      - run: yarn install
      - name: Yarn build
        run: yarn run encore production

      # https://github.com/shivammathur/setup-php (community)
      - name: Setup PHP, extensions with shivammathur/setup-php
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, xml, ctype, iconv, intl, pdo, pdo_mysql, dom, filter, gd, iconv, json, mbstring
        env:
          update: true

      - name: Check PHP Version
        run: php -v

      # —— Composer 🧙‍️ —————————————————————————————————————————————————————————
      - name: Validate composer.json and composer.lock
        run: composer validate
      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      # —— Symfony 🎵 ——————————————————————————————————————————————————————————
      - name: Check Symfony requirements
        run: vendor/bin/requirements-checker

      - name: Check the Symfony console
        run: php bin/console about

      - name: Migrations migrate
        run: |
          php bin/console d:m:m --no-interaction
        env:
          DATABASE_URL: mysql://root:@127.0.0.1:${{ job.services.mysql.ports['3306'] }}/crm

      - name: Dump to prod
        run: composer dump-env prod

      # —— Unit test ✅ ————————————————————————————————————————————————————————
      - name: Unit tests
        run: |
          php bin/console d:d:c --env=test
          php bin/console d:m:m --env=test --no-interaction
          php bin/console d:f:l --env=test --no-interaction
          php bin/phpunit
        env:
          DATABASE_URL: mysql://root:@127.0.0.1:${{ job.services.mysql.ports['3306'] }}/crm_test